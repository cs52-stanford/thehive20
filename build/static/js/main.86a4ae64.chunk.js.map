{"version":3,"sources":["images/logo-teamtrees-full-alt.svg","images/astronaut-sign.svg","images/spaceship.svg","images/counter-underline-light.svg","images/dots.svg","images/icon-badge-grove-2.svg","header.js","cardOne.js","cardTwo.js","form.js","leaderboard.js","donation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","spaceship","css","title_img","id","underline","astronaut","Component","handleClick","props","event","document","getElementById","selected","classList","remove","target","add","setSelected","EnterAmountWidget","dots","onClick","setIsFirstCard","setNumTrees","handleNext","First_Card","useState","selectedButton","setSelectedButton","handleChange","setDisplayName","value","setEmail","setMessage","DonationDetails","displayName","onChange","email","message","handlePrevious","addDonation","numTrees","handleSubmit","Second_Card","Form","isFirstCard","Leaderboard","donations","Donation","date","moment","format","avatar","alt","name","App","setDonations","values","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.86a4ae64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-teamtrees-full-alt.bede012e.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronaut-sign.c842f698.svg\";","module.exports = __webpack_public_path__ + \"static/media/spaceship.61c64af2.svg\";","module.exports = __webpack_public_path__ + \"static/media/counter-underline-light.9cb235ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/dots.90215154.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-badge-grove-2.214c8f5c.svg\";","import React, { Component } from \"react\";\n\n// This is one way to write CSS \n// Read more about it here:\n//https://emotion.sh/docs/introduction\n// For this assignment we recommend using emotion. \n// The header div below has been styled using the canonical emotion syntax\n// Feel free to copy and reuse in all your components.\nimport { css } from \"emotion\";\n\n//Here is all the image files that you need\nimport title_img from \"./images/logo-teamtrees-full-alt.svg\";\nimport astronaut from \"./images/astronaut-sign.svg\";\nimport spaceship from \"./images/spaceship.svg\";\nimport underline from \"./images/counter-underline-light.svg\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"row-1\">\n        <div className=\"col-1\">\n          <img src={spaceship} className={css`height:7vh;`}/>\n        </div>\n        <div className=\"col-2\">\n          <img src={title_img}/>\n          <p className=\"sub-header\">We did it! But that doesn't mean we're done. Come back anytime you feel like planting a tree!</p>\n          <div id=\"totalTrees\">21,803,427</div>\n          <div id=\"trees_planted\">TREES PLANTED</div>\n          <img src={underline} className={css`width: 7vw; justify-content: center; margin-top: 2vh;`}/>\n          <div id=\"plant_button\">Planting Projects</div>\n        </div>\n        <div className=\"col-3\">\n          <img src={astronaut} className=\"astronaut\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport dots from \"./images/dots.svg\";\n\nconst handleClick = (props, event) => {\n  document.getElementById(props.selected).classList.remove(\"active\");\n  event.target.classList.add(\"active\");\n  props.setSelected(event.target.id);\n}\n\nconst handleNext = (props) => {\n  props.setIsFirstCard(false);\n  switch(props.selected) {\n    case \"tree10\":\n      props.setNumTrees(10);\n      break;\n    case \"tree20\":\n      props.setNumTrees(20);\n      break;\n    case \"tree50\":\n      props.setNumTrees(50);\n      break;\n  }\n}\n\nconst EnterAmountWidget = (props) =>  {\n  return <div id=\"widget-style\">\n    <div className={css`margin-bottom: 1.5rem; margin-top: 1rem;`}>\n      <div>$1 PLANTS A TREE</div>\n      <img src={dots} className={css`max-width: 2.25rem;`}/>\n    </div>\n    <div className={css`display: flex; flex-direction: row; justify-content: space-around;`}>\n      <div className=\"tree-amount-button\" id=\"tree10\" onClick={(event) => handleClick(props, event)}>10<br/>Trees</div>\n      <div className=\"tree-amount-button active\" id=\"tree20\" onClick={(event) => handleClick(props, event)}>20<br/>Trees</div>\n      <div className=\"tree-amount-button\" id=\"tree50\" onClick={(event) => handleClick(props, event)}>50<br/>Trees</div>\n    </div>\n    <div className={css`display: flex; flex-direction: row; justify-content: flex-end;`}>\n      <div className=\"next-button\" onClick={() => handleNext(props)}>Next</div>\n    </div>\n  </div>\n}\n\nconst First_Card = (props) => {\n\n  const default_button = \"tree20\"\n  \n  const [selectedButton, setSelectedButton] = useState(default_button);\n  const [err, setErr] = useState(\"\");\n\n  \n  return <div \n    className={css`\n    width: 576px;\n    `\n    }>\n      <div\n        className={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        >\n        <div\n          className={css`\n            border-radius: calc(.5rem - 1px) calc(.5rem - 1px) 0 0;\n            flex-direction: column;\n            color: #273654;\n            background-color: #f6f6f4;\n            padding: 1rem 1.25rem .8rem;\n            border-bottom: 1px solid #eee;\n            text-transform: uppercase!important;\n            text-align: center!important;\n            box-sizing: border-box;\n            font-size: 1rem;\n            font-weight: 600;\n          `}\n        >JOIN #TEAMTREES. GIFT #TEAMTREES</div>\n        {/* Hint: You'll be adding props to EnterAmountWidget as you go!*/}\n        <EnterAmountWidget selected={selectedButton} setSelected={setSelectedButton} setIsFirstCard={props.setIsFirstCard} setNumTrees={props.setNumTrees}/>\n        <div\n          className={css`\n            border-radius: 0 0 calc(.5rem - 1px) calc(.5rem - 1px);\n            background-color: #f6f6f4;\n            border-top: 1px solid #eee;\n            padding: .75rem 1.25rem;\n            flex-direction: column;\n            font-weight: 400;\n            margin-bottom: 0!important;\n            text-transform: uppercase!important;\n            font-size: 70%;\n            text-align: center!important;\n            color: #518360;\n        `}\n        >FAQ</div>\n      </div>\n    </div>\n}\n\nexport default First_Card;\n","import React, { useState } from \"react\";\nimport { css } from \"emotion\";\n\nconst handleChange = (props, event) => {\n  let curr_id = event.target.id;\n  switch(curr_id) {\n    case \"entry1\":\n      props.setDisplayName(event.target.value);\n      break;\n    case \"entry2\":\n      props.setEmail(event.target.value);\n      break;\n    case \"entry3\":\n      props.setMessage(event.target.value);\n      break;\n  }\n}\n\nconst handlePrevious = (props) => {\n  props.setIsFirstCard(true);\n}\n\nconst handleSubmit = (props) => {\n  props.addDonation([props.displayName, props.numTrees, props.message]);\n  props.setIsFirstCard(true);\n}\n\nconst DonationDetails = (props) =>  {\n  return <div id=\"donation-style\">\n    <textarea id=\"entry1\" className=\"donation-text\" value={props.displayName} onChange={(event) => handleChange(props, event)}/>\n    <textarea id=\"entry2\" className=\"donation-text\" value={props.email} onChange={(event) => handleChange(props, event)}/>\n    <textarea id=\"entry3\" className=\"donation-text\" value={props.message} onChange={(event) => handleChange(props, event)}/>\n    <div className={css`display: flex; flex-direction: row; justify-content: flex-end; width:100%`}>\n      <div className=\"next-button previous-color\" onClick={() => handlePrevious(props)}>Previous</div>\n      <div className=\"next-button\" onClick={() => handleSubmit(props)}>Submit</div>\n    </div>\n  </div>\n}\n\n\nconst Second_Card = (props) => {\n  const displayNamePlaceHolder = \"Display Name\";\n  const emailPlaceHolder = \"Email\";\n  const messagePlaceHolder = \"My #TeamTrees message is..\";\n\n  const [displayName, setDisplayName] = useState(displayNamePlaceHolder);\n  const [email, setEmail] = useState(emailPlaceHolder);\n  const [message, setMessage] = useState(messagePlaceHolder);\n  \n  return <div \n    className={css`\n    width: 576px;\n    `\n    }>\n      <div\n        className={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        >\n        <div\n          className={css`\n            border-radius: calc(.5rem - 1px) calc(.5rem - 1px) 0 0;\n            flex-direction: column;\n            color: #273654;\n            background-color: #f6f6f4;\n            padding: 1rem 1.25rem .8rem;\n            border-bottom: 1px solid #eee;\n            text-transform: uppercase!important;\n            text-align: center!important;\n            box-sizing: border-box;\n            font-size: 1rem;\n            font-weight: 600;\n          `}\n        >Details</div>\n        {/* Hint: You'll be adding props to DonationDetails as you go!*/}\n        <DonationDetails displayName={displayName} setDisplayName={setDisplayName} email={email}\n        setEmail={setEmail} message={message} setMessage={setMessage} setIsFirstCard={props.setIsFirstCard}\n        addDonation={props.addDonation} numTrees={props.numTrees}/>\n        <div\n          className={css`\n            border-radius: 0 0 calc(.5rem - 1px) calc(.5rem - 1px);\n            background-color: #f6f6f4;\n            border-top: 1px solid #eee;\n            padding: .75rem 1.25rem;\n            flex-direction: column;\n            font-weight: 400;\n            margin-bottom: 0!important;\n            text-transform: uppercase!important;\n            font-size: 70%;\n            text-align: center!important;\n            color: #518360;\n        `}\n        >FAQ</div>\n      </div>\n    </div>\n}\n\nexport default Second_Card;","import React, { useState } from \"react\";\nimport First_Card from \"./cardOne\";\nimport Second_Card from \"./cardTwo\";\n\n\nconst Form = (props) => {\n  const [isFirstCard, setIsFirstCard] = useState(true);\n  const [numTrees, setNumTrees] = useState(null);\n\n\n  //TODO: Your form implementation\n  if (isFirstCard) return <First_Card setIsFirstCard={setIsFirstCard} setNumTrees={setNumTrees}/>;\n  else return <Second_Card setIsFirstCard={setIsFirstCard} addDonation={props.addDonation} numTrees={numTrees}/>;\n }\n\nexport default Form;\n   ","import React, { Component, useState } from \"react\";\n\nimport { css } from \"emotion\";\nimport moment from \"moment\";\n\n\nconst Leaderboard = (props) => {\n\n  return (\n    <div>\n      <div\n        className={css`\n          width: 576px;\n        `}\n      >\n        <div\n          className={css`\n            display: flex;\n            flex-direction: column;\n            margin: 10rem 0 10rem 0;\n          `}\n        >\n          <div\n            className={css`\n              border-radius: calc(0.5rem - 1px) calc(0.5rem - 1px) 0 0;\n              flex-direction: column;\n              color: #4b7330;\n              background-color: #f6f6f4;\n              padding: 1rem 1.25rem 0.8rem;\n              border-bottom: 1px solid #eee;\n              text-transform: uppercase !important;\n              text-align: center !important;\n              box-sizing: border-box;\n              font-size: 1rem;\n              font-weight: 600;\n            `}\n          >\n            DONATIONS\n          </div>\n\n          {props.donations}\n\n          <div\n            className={css`\n              border-radius: 0 0 calc(0.5rem - 1px) calc(0.5rem - 1px);\n              background-color: #f6f6f4;\n              border-top: 1px solid #eee;\n              padding: 0.75rem 1.25rem;\n              flex-direction: column;\n              font-weight: 400;\n              margin-bottom: 0 !important;\n              text-transform: uppercase !important;\n              font-size: 70%;\n              text-align: center !important;\n              color: #518360;\n            `}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Leaderboard;\n","\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport moment from \"moment\";\n\nconst Donation = (props) => {\n    var date = moment().format(\"L h:mm:ss A\");\n  \n    return (\n      <div\n        className={css`\n          display: flex;\n          flex-direction: row;\n          color: #273654;\n          background-color: #f6f6f4;\n          padding: 1.5rem;\n          border-bottom: 1px solid #eee;\n          text-align: left !important;\n          box-sizing: border-box;\n          font-size: 1rem;\n          font-weight: 600;\n          height: 130px;\n          position: relative;\n        `}\n      >\n        <img\n          src={props.avatar}\n          alt=\"avatar\"\n          className={css`\n            height: 100%;\n          `}\n        />\n  \n        <span\n          className={css`\n            display: flex;\n            flex-direction: column;\n            margin-left: 2rem;\n            text-align: center;\n          `}\n        >\n          <span\n            className={css`\n              display: flex;\n              flex-direction: row;\n              height: 40%;\n              position: relative;\n            `}\n          >\n            <span\n              className={css`\n                font-size: 1.5rem;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n              `}\n            >\n              {props.name}\n            </span>\n  \n            <span\n              className={css`\n                background-color: #4b7330;\n                border-radius: 2rem;\n                margin-left: 1rem;\n                padding: 0rem 1rem 0rem 1rem;\n                color: #fff;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n              `}\n            >\n              {props.numTrees} TREES\n            </span>\n          </span>\n  \n          <span\n            className={css`\n              display: flex;\n              justify-content: left;\n              align-items: center;\n              height: 20%;\n              font-size: 0.75rem;\n              font-weight: 100;\n              color: grey;\n            `}\n          >\n            {date}\n          </span>\n  \n          <span\n            className={css`\n              display: flex;\n              justify-content: left;\n              align-items: center;\n              height: 40%;\n            `}\n          >\n            {props.message}\n          </span>\n        </span>\n      </div>\n    );\n  };\n  \n  export default Donation;\n  ","import React, { useState } from \"react\";\nimport Header from \"./header.js\";\nimport Form from \"./form.js\";\nimport Leaderboard from \"./leaderboard.js\";\nimport avatar from \"./images/icon-badge-grove-2.svg\";\n\nimport { css } from \"emotion\";\nimport moment from \"moment\";\nimport \"./App.css\";\n\n//the Donation component has been implemented for you.\nimport Donation from \"./donation.js\"\n\nconst App = () => {\n  const [donations, setDonations] = useState([]);\n\n  const addDonation = (values) => {\n    setDonations([\n      ...donations,\n      <Donation\n        avatar={avatar}\n        name={values[0]}\n        numTrees={values[1]}\n        message={values[2]}\n      />,\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header />\n        <Form addDonation={addDonation} />\n        <Leaderboard donations={donations} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}